<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// open floors, walls, doors, enemies
enemy1_list = ds_list_create();
enemy_shooter_list = ds_list_create();
enemy_dasher_list = ds_list_create();
enemy_tank_list = ds_list_create();

wall_list = ds_list_create();
floor_list = ds_list_create();

global.num_enemies = 0;
global.num_floors = 0;

first_load = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// if game started AND if not enough enemies
if (global.play == true &amp;&amp; global.num_enemies &lt; 5+global.level) {
    // on first load -- items
    if (first_load == true) {
        // spawn diamond &amp; diamond location powerup
        spawn_item(obj_diamond);
        spawn_item(obj_diamond_loc);
        
        // spawn 3 bullets
        if (global.level &gt; 2) {
            while (!instance_exists(obj_3_bullets)) {
                // get random floor tile
                var odds_floor = ds_list_size(floor_list);
                var selected_id = irandom(odds_floor);
                floor_tile = ds_list_find_value(floor_list,selected_id);
                
                if (is_undefined(floor_tile) == false) {
                    xx = tile_get_x(floor_tile)+CELL_WIDTH/2;
                    yy = tile_get_y(floor_tile)+CELL_HEIGHT/2;
                
                    if (point_distance(xx, yy, obj_player.x, obj_player.y) &gt; view_wview[0]/2+50 &amp;&amp; !instance_position(xx,yy,obj_diamond) &amp;&amp; !instance_position(xx,yy,obj_diamond_loc)) {
                        instance_create(xx, yy, obj_3_bullets);
                    }
                }
            }
            show_debug_message("3bullets");
        }
        
        // increase health
        if (global.level &gt; 4) {
            while (!instance_exists(obj_health)) {
                // get random floor tile
                var odds_floor = ds_list_size(floor_list);
                var selected_id = irandom(odds_floor);
                floor_tile = ds_list_find_value(floor_list,selected_id);
                
                if (is_undefined(floor_tile) == false) {
                    xx = tile_get_x(floor_tile)+CELL_WIDTH/2;
                    yy = tile_get_y(floor_tile)+CELL_HEIGHT/2;
                
                    if (point_distance(xx, yy, obj_player.x, obj_player.y) &gt; view_wview[0]/2+50 &amp;&amp; !instance_position(xx,yy,obj_diamond) &amp;&amp; !instance_position(xx,yy,obj_diamond_loc) &amp;&amp; !instance_position(xx,yy,obj_3_bullets)) {
                        instance_create(xx, yy, obj_health);
                    }
                }
            }
            show_debug_message("health");
        }
        
        // spawn bomb
        if (global.level &gt; 5) {
            while (!instance_exists(obj_bomb)) {
                // get random floor tile
                var odds_floor = ds_list_size(floor_list);
                var selected_id = irandom(odds_floor);
                floor_tile = ds_list_find_value(floor_list,selected_id);
                
                if (is_undefined(floor_tile) == false) {
                    xx = tile_get_x(floor_tile)+CELL_WIDTH/2;
                    yy = tile_get_y(floor_tile)+CELL_HEIGHT/2;
                
                    if (point_distance(xx, yy, obj_player.x, obj_player.y) &gt; view_wview[0]/2+50 &amp;&amp; !instance_position(xx,yy,obj_diamond) &amp;&amp; !instance_position(xx,yy,obj_diamond_loc) &amp;&amp; !instance_position(xx,yy,obj_3_bullets) &amp;&amp; !instance_position(xx,yy,obj_health)) {
                        instance_create(xx, yy, obj_bomb);
                    }
                }
                show_debug_message("bomb");
            }
        }
        
        // spawn fake diamond
        if (global.level &gt; 7) { 
            show_debug_message("fake diamond");
            while (!instance_exists(obj_fake_diamond)) {
                show_debug_message("in while");
                // get random floor tile
                var odds_floor = ds_list_size(floor_list);
                var selected_id = irandom(odds_floor);
                floor_tile = ds_list_find_value(floor_list,selected_id);
                
                if (is_undefined(floor_tile) == false) {
                    xx = tile_get_x(floor_tile)+CELL_WIDTH/2;
                    yy = tile_get_y(floor_tile)+CELL_HEIGHT/2;
                
                    if (point_distance(xx, yy, obj_player.x, obj_player.y) &gt; view_wview[0]/2+50 &amp;&amp; !instance_position(xx,yy,obj_diamond) &amp;&amp; !instance_position(xx,yy,obj_diamond_loc) &amp;&amp; !instance_position(xx,yy,obj_3_bullets) &amp;&amp; !instance_position(xx,yy,obj_bomb)) {
                        instance_create(xx, yy, obj_fake_diamond);
                    }
                }
                show_debug_message("fake dia");
            }
        }
    
        first_load = false;
    }

    // get random floor tile
    var odds_floor = ds_list_size(floor_list);
    var selected_id = irandom(odds_floor);
    
    // get x and y of floor tile
    floor_tile = ds_list_find_value(floor_list,selected_id);
    
    if (is_undefined(floor_tile) == false) {
        xx = tile_get_x(floor_tile)+CELL_WIDTH/2;
        yy = tile_get_y(floor_tile)+CELL_HEIGHT/2;
        
        // check if far enough away from player
        if (point_distance(xx, yy, obj_player.x, obj_player.y) &gt; room_width/2+50) {
            // spawn enemies
            var odds = 100;
            
            // enemy 1
            if(irandom(odds) &lt;30) {
                var new_id = instance_create(xx, yy, obj_enemy);
                global.num_enemies++;
                ds_list_add(enemy1_list, new_id);
            } 
            // enemy shooter
            else if (irandom(odds) &lt;60 &amp;&amp; global.level &gt;2) {
                var new_id = instance_create(xx, yy, obj_enemy_shooter);
                global.num_enemies=global.num_enemies+2;
                ds_list_add(enemy_shooter_list, new_id);
            } 
            // enemy dasher
            else if (irandom(odds) &lt; 80 &amp;&amp; global.level &gt; 5) {
                var new_id = instance_create(xx, yy, obj_enemy_dasher);
                global.num_enemies=global.num_enemies+1.5;
                ds_list_add(enemy_dasher_list, new_id);
            }
            // enemy tank
            else if (global.level &gt; 7) {
                var new_id = instance_create(xx, yy, obj_enemy_tank);
                global.num_enemies=global.num_enemies+3;
                ds_list_add(enemy_tank_list, new_id);
            } 
        }   
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
